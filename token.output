Terminals unused in grammar

   TOKEN_EOF
   ARRAY
   BOOLEAN
   CHAR
   ELSE
   FALSE
   FOR
   FUNCTION
   IF
   INTEGER
   PRINT
   RETURN
   STRING
   TRUE
   VOID
   WHILE
   COLON
   S_COL
   INTERNAL_ERR
   SCAN_ERR


Grammar

    0 $accept: program $end

    1 program: expr

    2 expr: expr10

    3 lvalue: IDENT L_BRK expr R_BRK
    4       | IDENT

    5 expr10: lvalue ASGN expr10
    6       | lvalue ASGN arr_lit
    7       | expr9

    8 expr9: expr9 OR expr8
    9      | expr8

   10 expr8: expr8 AND expr7
   11      | expr7

   12 expr7: expr7 LT expr6
   13      | expr7 LT_EQ expr6
   14      | expr7 GT expr6
   15      | expr7 GT_EQ expr6
   16      | expr7 EQ expr6
   17      | expr7 NOT_EQ expr6
   18      | expr6

   19 expr6: expr6 PLUS expr5
   20      | expr6 MINUS expr5
   21      | expr5

   22 expr5: expr5 STAR expr4
   23      | expr5 SLASH expr4
   24      | expr5 PRCT expr4
   25      | expr4

   26 expr4: expr4 CARET expr3
   27      | expr3

   28 expr3: PLUS expr3
   29      | MINUS expr3
   30      | NOT expr3
   31      | expr2

   32 expr2: expr2 DEC
   33      | expr2 INC
   34      | expr1

   35 expr1: L_PAR expr R_PAR
   36      | L_BRK expr R_BRK
   37      | func_call
   38      | atom

   39 atom: lvalue
   40     | STR_LIT
   41     | INT_LIT
   42     | CHAR_LIT

   43 func_call: IDENT L_PAR maybe_expr_comma_list R_PAR

   44 arr_lit: IDENT L_BRC maybe_expr_comma_list R_BRC

   45 maybe_expr_comma_list: %empty
   46                      | expr_comma_list

   47 expr_comma_list: expr
   48                | expr COMMA expr_comma_list


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_EOF (258)
ARRAY (259)
BOOLEAN (260)
CHAR (261)
ELSE (262)
FALSE (263)
FOR (264)
FUNCTION (265)
IF (266)
INTEGER (267)
PRINT (268)
RETURN (269)
STRING (270)
TRUE (271)
VOID (272)
WHILE (273)
L_PAR (274) 35 43
R_PAR (275) 35 43
L_BRK (276) 3 36
R_BRK (277) 3 36
L_BRC (278) 44
R_BRC (279) 44
INC (280) 33
DEC (281) 32
MINUS (282) 20 29
NOT (283) 30
CARET (284) 26
STAR (285) 22
SLASH (286) 23
PRCT (287) 24
PLUS (288) 19 28
LT_EQ (289) 13
LT (290) 12
GT_EQ (291) 15
GT (292) 14
EQ (293) 16
NOT_EQ (294) 17
AND (295) 10
OR (296) 8
ASGN (297) 5 6
COLON (298)
S_COL (299)
COMMA (300) 48
IDENT (301) 3 4 43 44
STR_LIT (302) 40
INT_LIT (303) 41
CHAR_LIT (304) 42
INTERNAL_ERR (305)
SCAN_ERR (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
expr (54)
    on left: 2, on right: 1 3 35 36 47 48
lvalue (55)
    on left: 3 4, on right: 5 6 39
expr10 (56)
    on left: 5 6 7, on right: 2 5
expr9 (57)
    on left: 8 9, on right: 7 8
expr8 (58)
    on left: 10 11, on right: 8 9 10
expr7 (59)
    on left: 12 13 14 15 16 17 18, on right: 10 11 12 13 14 15 16 17
expr6 (60)
    on left: 19 20 21, on right: 12 13 14 15 16 17 18 19 20
expr5 (61)
    on left: 22 23 24 25, on right: 19 20 21 22 23 24
expr4 (62)
    on left: 26 27, on right: 22 23 24 25 26
expr3 (63)
    on left: 28 29 30 31, on right: 26 27 28 29 30
expr2 (64)
    on left: 32 33 34, on right: 31 32 33
expr1 (65)
    on left: 35 36 37 38, on right: 34
atom (66)
    on left: 39 40 41 42, on right: 38
func_call (67)
    on left: 43, on right: 37
arr_lit (68)
    on left: 44, on right: 6
maybe_expr_comma_list (69)
    on left: 45 46, on right: 43 44
expr_comma_list (70)
    on left: 47 48, on right: 46 48


State 0

    0 $accept: . program $end

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    program    go to state 10
    expr       go to state 11
    lvalue     go to state 12
    expr10     go to state 13
    expr9      go to state 14
    expr8      go to state 15
    expr7      go to state 16
    expr6      go to state 17
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 1

   35 expr1: L_PAR . expr R_PAR

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    expr       go to state 25
    lvalue     go to state 12
    expr10     go to state 13
    expr9      go to state 14
    expr8      go to state 15
    expr7      go to state 16
    expr6      go to state 17
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 2

   36 expr1: L_BRK . expr R_BRK

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    expr       go to state 26
    lvalue     go to state 12
    expr10     go to state 13
    expr9      go to state 14
    expr8      go to state 15
    expr7      go to state 16
    expr6      go to state 17
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 3

   29 expr3: MINUS . expr3

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr3      go to state 28
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 4

   30 expr3: NOT . expr3

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr3      go to state 29
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 5

   28 expr3: PLUS . expr3

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr3      go to state 30
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 6

    3 lvalue: IDENT . L_BRK expr R_BRK
    4       | IDENT .
   43 func_call: IDENT . L_PAR maybe_expr_comma_list R_PAR

    L_PAR  shift, and go to state 31
    L_BRK  shift, and go to state 32

    $default  reduce using rule 4 (lvalue)


State 7

   40 atom: STR_LIT .

    $default  reduce using rule 40 (atom)


State 8

   41 atom: INT_LIT .

    $default  reduce using rule 41 (atom)


State 9

   42 atom: CHAR_LIT .

    $default  reduce using rule 42 (atom)


State 10

    0 $accept: program . $end

    $end  shift, and go to state 33


State 11

    1 program: expr .

    $default  reduce using rule 1 (program)


State 12

    5 expr10: lvalue . ASGN expr10
    6       | lvalue . ASGN arr_lit
   39 atom: lvalue .

    ASGN  shift, and go to state 34

    $default  reduce using rule 39 (atom)


State 13

    2 expr: expr10 .

    $default  reduce using rule 2 (expr)


State 14

    7 expr10: expr9 .
    8 expr9: expr9 . OR expr8

    OR  shift, and go to state 35

    $default  reduce using rule 7 (expr10)


State 15

    9 expr9: expr8 .
   10 expr8: expr8 . AND expr7

    AND  shift, and go to state 36

    $default  reduce using rule 9 (expr9)


State 16

   11 expr8: expr7 .
   12 expr7: expr7 . LT expr6
   13      | expr7 . LT_EQ expr6
   14      | expr7 . GT expr6
   15      | expr7 . GT_EQ expr6
   16      | expr7 . EQ expr6
   17      | expr7 . NOT_EQ expr6

    LT_EQ   shift, and go to state 37
    LT      shift, and go to state 38
    GT_EQ   shift, and go to state 39
    GT      shift, and go to state 40
    EQ      shift, and go to state 41
    NOT_EQ  shift, and go to state 42

    $default  reduce using rule 11 (expr8)


State 17

   18 expr7: expr6 .
   19 expr6: expr6 . PLUS expr5
   20      | expr6 . MINUS expr5

    MINUS  shift, and go to state 43
    PLUS   shift, and go to state 44

    $default  reduce using rule 18 (expr7)


State 18

   21 expr6: expr5 .
   22 expr5: expr5 . STAR expr4
   23      | expr5 . SLASH expr4
   24      | expr5 . PRCT expr4

    STAR   shift, and go to state 45
    SLASH  shift, and go to state 46
    PRCT   shift, and go to state 47

    $default  reduce using rule 21 (expr6)


State 19

   25 expr5: expr4 .
   26 expr4: expr4 . CARET expr3

    CARET  shift, and go to state 48

    $default  reduce using rule 25 (expr5)


State 20

   27 expr4: expr3 .

    $default  reduce using rule 27 (expr4)


State 21

   31 expr3: expr2 .
   32 expr2: expr2 . DEC
   33      | expr2 . INC

    INC  shift, and go to state 49
    DEC  shift, and go to state 50

    $default  reduce using rule 31 (expr3)


State 22

   34 expr2: expr1 .

    $default  reduce using rule 34 (expr2)


State 23

   38 expr1: atom .

    $default  reduce using rule 38 (expr1)


State 24

   37 expr1: func_call .

    $default  reduce using rule 37 (expr1)


State 25

   35 expr1: L_PAR expr . R_PAR

    R_PAR  shift, and go to state 51


State 26

   36 expr1: L_BRK expr . R_BRK

    R_BRK  shift, and go to state 52


State 27

   39 atom: lvalue .

    $default  reduce using rule 39 (atom)


State 28

   29 expr3: MINUS expr3 .

    $default  reduce using rule 29 (expr3)


State 29

   30 expr3: NOT expr3 .

    $default  reduce using rule 30 (expr3)


State 30

   28 expr3: PLUS expr3 .

    $default  reduce using rule 28 (expr3)


State 31

   43 func_call: IDENT L_PAR . maybe_expr_comma_list R_PAR

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    $default  reduce using rule 45 (maybe_expr_comma_list)

    expr                   go to state 53
    lvalue                 go to state 12
    expr10                 go to state 13
    expr9                  go to state 14
    expr8                  go to state 15
    expr7                  go to state 16
    expr6                  go to state 17
    expr5                  go to state 18
    expr4                  go to state 19
    expr3                  go to state 20
    expr2                  go to state 21
    expr1                  go to state 22
    atom                   go to state 23
    func_call              go to state 24
    maybe_expr_comma_list  go to state 54
    expr_comma_list        go to state 55


State 32

    3 lvalue: IDENT L_BRK . expr R_BRK

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    expr       go to state 56
    lvalue     go to state 12
    expr10     go to state 13
    expr9      go to state 14
    expr8      go to state 15
    expr7      go to state 16
    expr6      go to state 17
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 33

    0 $accept: program $end .

    $default  accept


State 34

    5 expr10: lvalue ASGN . expr10
    6       | lvalue ASGN . arr_lit

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 57
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 12
    expr10     go to state 58
    expr9      go to state 14
    expr8      go to state 15
    expr7      go to state 16
    expr6      go to state 17
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24
    arr_lit    go to state 59


State 35

    8 expr9: expr9 OR . expr8

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr8      go to state 60
    expr7      go to state 16
    expr6      go to state 17
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 36

   10 expr8: expr8 AND . expr7

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr7      go to state 61
    expr6      go to state 17
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 37

   13 expr7: expr7 LT_EQ . expr6

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr6      go to state 62
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 38

   12 expr7: expr7 LT . expr6

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr6      go to state 63
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 39

   15 expr7: expr7 GT_EQ . expr6

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr6      go to state 64
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 40

   14 expr7: expr7 GT . expr6

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr6      go to state 65
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 41

   16 expr7: expr7 EQ . expr6

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr6      go to state 66
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 42

   17 expr7: expr7 NOT_EQ . expr6

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr6      go to state 67
    expr5      go to state 18
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 43

   20 expr6: expr6 MINUS . expr5

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr5      go to state 68
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 44

   19 expr6: expr6 PLUS . expr5

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr5      go to state 69
    expr4      go to state 19
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 45

   22 expr5: expr5 STAR . expr4

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr4      go to state 70
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 46

   23 expr5: expr5 SLASH . expr4

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr4      go to state 71
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 47

   24 expr5: expr5 PRCT . expr4

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr4      go to state 72
    expr3      go to state 20
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 48

   26 expr4: expr4 CARET . expr3

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    lvalue     go to state 27
    expr3      go to state 73
    expr2      go to state 21
    expr1      go to state 22
    atom       go to state 23
    func_call  go to state 24


State 49

   33 expr2: expr2 INC .

    $default  reduce using rule 33 (expr2)


State 50

   32 expr2: expr2 DEC .

    $default  reduce using rule 32 (expr2)


State 51

   35 expr1: L_PAR expr R_PAR .

    $default  reduce using rule 35 (expr1)


State 52

   36 expr1: L_BRK expr R_BRK .

    $default  reduce using rule 36 (expr1)


State 53

   47 expr_comma_list: expr .
   48                | expr . COMMA expr_comma_list

    COMMA  shift, and go to state 74

    $default  reduce using rule 47 (expr_comma_list)


State 54

   43 func_call: IDENT L_PAR maybe_expr_comma_list . R_PAR

    R_PAR  shift, and go to state 75


State 55

   46 maybe_expr_comma_list: expr_comma_list .

    $default  reduce using rule 46 (maybe_expr_comma_list)


State 56

    3 lvalue: IDENT L_BRK expr . R_BRK

    R_BRK  shift, and go to state 76


State 57

    3 lvalue: IDENT . L_BRK expr R_BRK
    4       | IDENT .
   43 func_call: IDENT . L_PAR maybe_expr_comma_list R_PAR
   44 arr_lit: IDENT . L_BRC maybe_expr_comma_list R_BRC

    L_PAR  shift, and go to state 31
    L_BRK  shift, and go to state 32
    L_BRC  shift, and go to state 77

    $default  reduce using rule 4 (lvalue)


State 58

    5 expr10: lvalue ASGN expr10 .

    $default  reduce using rule 5 (expr10)


State 59

    6 expr10: lvalue ASGN arr_lit .

    $default  reduce using rule 6 (expr10)


State 60

    8 expr9: expr9 OR expr8 .
   10 expr8: expr8 . AND expr7

    AND  shift, and go to state 36

    $default  reduce using rule 8 (expr9)


State 61

   10 expr8: expr8 AND expr7 .
   12 expr7: expr7 . LT expr6
   13      | expr7 . LT_EQ expr6
   14      | expr7 . GT expr6
   15      | expr7 . GT_EQ expr6
   16      | expr7 . EQ expr6
   17      | expr7 . NOT_EQ expr6

    LT_EQ   shift, and go to state 37
    LT      shift, and go to state 38
    GT_EQ   shift, and go to state 39
    GT      shift, and go to state 40
    EQ      shift, and go to state 41
    NOT_EQ  shift, and go to state 42

    $default  reduce using rule 10 (expr8)


State 62

   13 expr7: expr7 LT_EQ expr6 .
   19 expr6: expr6 . PLUS expr5
   20      | expr6 . MINUS expr5

    MINUS  shift, and go to state 43
    PLUS   shift, and go to state 44

    $default  reduce using rule 13 (expr7)


State 63

   12 expr7: expr7 LT expr6 .
   19 expr6: expr6 . PLUS expr5
   20      | expr6 . MINUS expr5

    MINUS  shift, and go to state 43
    PLUS   shift, and go to state 44

    $default  reduce using rule 12 (expr7)


State 64

   15 expr7: expr7 GT_EQ expr6 .
   19 expr6: expr6 . PLUS expr5
   20      | expr6 . MINUS expr5

    MINUS  shift, and go to state 43
    PLUS   shift, and go to state 44

    $default  reduce using rule 15 (expr7)


State 65

   14 expr7: expr7 GT expr6 .
   19 expr6: expr6 . PLUS expr5
   20      | expr6 . MINUS expr5

    MINUS  shift, and go to state 43
    PLUS   shift, and go to state 44

    $default  reduce using rule 14 (expr7)


State 66

   16 expr7: expr7 EQ expr6 .
   19 expr6: expr6 . PLUS expr5
   20      | expr6 . MINUS expr5

    MINUS  shift, and go to state 43
    PLUS   shift, and go to state 44

    $default  reduce using rule 16 (expr7)


State 67

   17 expr7: expr7 NOT_EQ expr6 .
   19 expr6: expr6 . PLUS expr5
   20      | expr6 . MINUS expr5

    MINUS  shift, and go to state 43
    PLUS   shift, and go to state 44

    $default  reduce using rule 17 (expr7)


State 68

   20 expr6: expr6 MINUS expr5 .
   22 expr5: expr5 . STAR expr4
   23      | expr5 . SLASH expr4
   24      | expr5 . PRCT expr4

    STAR   shift, and go to state 45
    SLASH  shift, and go to state 46
    PRCT   shift, and go to state 47

    $default  reduce using rule 20 (expr6)


State 69

   19 expr6: expr6 PLUS expr5 .
   22 expr5: expr5 . STAR expr4
   23      | expr5 . SLASH expr4
   24      | expr5 . PRCT expr4

    STAR   shift, and go to state 45
    SLASH  shift, and go to state 46
    PRCT   shift, and go to state 47

    $default  reduce using rule 19 (expr6)


State 70

   22 expr5: expr5 STAR expr4 .
   26 expr4: expr4 . CARET expr3

    CARET  shift, and go to state 48

    $default  reduce using rule 22 (expr5)


State 71

   23 expr5: expr5 SLASH expr4 .
   26 expr4: expr4 . CARET expr3

    CARET  shift, and go to state 48

    $default  reduce using rule 23 (expr5)


State 72

   24 expr5: expr5 PRCT expr4 .
   26 expr4: expr4 . CARET expr3

    CARET  shift, and go to state 48

    $default  reduce using rule 24 (expr5)


State 73

   26 expr4: expr4 CARET expr3 .

    $default  reduce using rule 26 (expr4)


State 74

   48 expr_comma_list: expr COMMA . expr_comma_list

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    expr             go to state 53
    lvalue           go to state 12
    expr10           go to state 13
    expr9            go to state 14
    expr8            go to state 15
    expr7            go to state 16
    expr6            go to state 17
    expr5            go to state 18
    expr4            go to state 19
    expr3            go to state 20
    expr2            go to state 21
    expr1            go to state 22
    atom             go to state 23
    func_call        go to state 24
    expr_comma_list  go to state 78


State 75

   43 func_call: IDENT L_PAR maybe_expr_comma_list R_PAR .

    $default  reduce using rule 43 (func_call)


State 76

    3 lvalue: IDENT L_BRK expr R_BRK .

    $default  reduce using rule 3 (lvalue)


State 77

   44 arr_lit: IDENT L_BRC . maybe_expr_comma_list R_BRC

    L_PAR     shift, and go to state 1
    L_BRK     shift, and go to state 2
    MINUS     shift, and go to state 3
    NOT       shift, and go to state 4
    PLUS      shift, and go to state 5
    IDENT     shift, and go to state 6
    STR_LIT   shift, and go to state 7
    INT_LIT   shift, and go to state 8
    CHAR_LIT  shift, and go to state 9

    $default  reduce using rule 45 (maybe_expr_comma_list)

    expr                   go to state 53
    lvalue                 go to state 12
    expr10                 go to state 13
    expr9                  go to state 14
    expr8                  go to state 15
    expr7                  go to state 16
    expr6                  go to state 17
    expr5                  go to state 18
    expr4                  go to state 19
    expr3                  go to state 20
    expr2                  go to state 21
    expr1                  go to state 22
    atom                   go to state 23
    func_call              go to state 24
    maybe_expr_comma_list  go to state 79
    expr_comma_list        go to state 55


State 78

   48 expr_comma_list: expr COMMA expr_comma_list .

    $default  reduce using rule 48 (expr_comma_list)


State 79

   44 arr_lit: IDENT L_BRC maybe_expr_comma_list . R_BRC

    R_BRC  shift, and go to state 80


State 80

   44 arr_lit: IDENT L_BRC maybe_expr_comma_list R_BRC .

    $default  reduce using rule 44 (arr_lit)
